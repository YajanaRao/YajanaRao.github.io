{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","data","location","allPosts","allMarkdownRemark","edges","siteTitle","site","siteMetadata","title","useState","query","filteredData","state","setState","style","display","type","id","name","placeholder","autoFocus","onChange","event","target","value","filter","post","node","frontmatter","tags","toLowerCase","includes","join","width","map","fields","slug","key","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2FAAA,0HA0EeA,UAnEG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAWF,EAAKG,kBAAkBC,MAClCC,EAAYL,EAAKM,KAAKC,aAAaC,MAFD,EAIdC,mBAAS,CACjCC,MAAO,GACPC,aAAcT,IAFTU,EAJiC,KAI1BC,EAJ0B,KAYhCF,EAAiBC,EAAjBD,aAiBR,OACE,kBAAC,IAAD,CAAQV,SAAUA,EAAUO,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,yBAAKM,MAAO,CAAEC,QAAS,SACrB,2BAAOC,KAAK,OAAOC,GAAG,SAASC,KAAK,eAAeC,YAAY,eAAeC,WAAS,EAACC,SAnBzE,SAAAC,GACnB,IAAMZ,EAAQY,EAAMC,OAAOC,MACrBb,EAAeT,EAASuB,QAAO,SAAAC,GAAS,IAAD,EACnBA,EAAKC,KAAKC,YAA1BpB,EADmC,EACnCA,MAAOqB,EAD4B,EAC5BA,KAEf,OACErB,EAAMsB,cAAcC,SAASrB,EAAMoB,gBAAmBD,GAAQA,EAAKG,KAAK,IAAIF,cAAcC,SAASrB,EAAMoB,kBAG7GjB,EAAS,CACPH,QACAC,kBAQkHG,MAAO,CAAEmB,MAAO,WAGhItB,EAAauB,KAAI,YAAe,IAAZP,EAAW,EAAXA,KACZnB,EAAQmB,EAAKC,YAAYpB,OAASmB,EAAKQ,OAAOC,KACpD,OACE,6BAASC,IAAKV,EAAKQ,OAAOC,MACxB,gCACE,wBACEtB,MAAO,CACLwB,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMzB,MAAO,CAAE0B,UAAU,QAAWC,GAAId,EAAKQ,OAAOC,MACjD5B,IAGL,+BAAQmB,EAAKC,YAAYc,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQjB,EAAKC,YAAYiB,aAAelB,EAAKmB,kBAc1D,IAAMC,EAAS","file":"component---src-pages-index-js-5fc4f9cf7e4f92f1a065.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n  const allPosts = data.allMarkdownRemark.edges\n  const siteTitle = data.site.siteMetadata.title\n\n  const [state, setState] = useState({\n    query: \"\",\n    filteredData: allPosts,\n  });\n\n\n\n\n  const { filteredData } = state\n\n  const handleChange = event => {\n    const query = event.target.value\n    const filteredData = allPosts.filter(post => {\n      const { title, tags } = post.node.frontmatter\n\n      return (\n        title.toLowerCase().includes(query.toLowerCase()) || (tags && tags.join(\"\").toLowerCase().includes(query.toLowerCase()))\n      )\n    });\n    setState({\n      query,\n      filteredData\n    });\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <div style={{ display: \"flex\" }}>\n        <input type=\"text\" id=\"search\" name=\"Search Blogs\" placeholder=\"Search Blogs\" autoFocus onChange={handleChange} style={{ width: \"100%\" }} />\n      </div>\n      {\n        filteredData.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        })\n      }\n    </Layout >\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}