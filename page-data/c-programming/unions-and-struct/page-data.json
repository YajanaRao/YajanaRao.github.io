{"componentChunkName":"component---src-templates-blog-post-js","path":"/c-programming/unions-and-struct/","result":{"data":{"site":{"siteMetadata":{"title":"Yajana Rao"}},"markdownRemark":{"id":"ab0d2707-8d01-5183-87bd-29a3e0e86b9d","excerpt":"Define structures A struct (or structure) is a collection of variables (can be of different types) under a single name. Syntax of struct Example Create structâ€¦","html":"<h2>Define structures</h2>\n<p>A struct (or structure) is a collection of variables (can be of different types) under a single name.</p>\n<h3>Syntax of struct</h3>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">structureName</span>\n<span class=\"token punctuation\">{</span>\n    dataType member1<span class=\"token punctuation\">;</span>\n    dataType member2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Example</h3>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> citNo<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> salary<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Create struct variables</h2>\n<p>Creating struct variables allocates the memory</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> citNo<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> salary<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span> person1<span class=\"token punctuation\">,</span> person2<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Another way is</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> citNo<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> salary<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> person1<span class=\"token punctuation\">,</span> person2<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Access members of a structure</h2>\n<ol>\n<li><code class=\"language-text\">.</code> - Member operator</li>\n<li><code class=\"language-text\">-></code> - Structure pointer operator</li>\n</ol>\n<p>Example</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">person2<span class=\"token punctuation\">.</span>salary<span class=\"token punctuation\">;</span>\nperson2<span class=\"token operator\">-></span>salary<span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Keyword typedef</h2>\n<p><code class=\"language-text\">typedef</code> keyword is used to create an alias name for data types.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Distance</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> feet<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> inch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Distance</span> d1<span class=\"token punctuation\">,</span> d2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>is equivalent to</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Distance</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> feet<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> inch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> distances<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    distances d1<span class=\"token punctuation\">,</span> d2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Nested Structures</h2>\n<p>Structures within a structure</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">complex</span>\n<span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">int</span> image<span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">float</span> real<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">number</span>\n<span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">struct</span> <span class=\"token class-name\">complex</span> comp<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">int</span> integers<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> num1<span class=\"token punctuation\">,</span> num2<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">num2<span class=\"token punctuation\">.</span>comp<span class=\"token punctuation\">.</span>image <span class=\"token operator\">=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Example</h2>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// Program to add two distances (feet-inch)</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Distance</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> feet<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> inch<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> dist1<span class=\"token punctuation\">,</span> dist2<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1st distance\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter feet: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dist1<span class=\"token punctuation\">.</span>feet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter inch: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%f\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dist1<span class=\"token punctuation\">.</span>inch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2nd distance\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter feet: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dist2<span class=\"token punctuation\">.</span>feet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter inch: \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%f\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dist2<span class=\"token punctuation\">.</span>inch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// adding feet</span>\n    sum<span class=\"token punctuation\">.</span>feet <span class=\"token operator\">=</span> dist1<span class=\"token punctuation\">.</span>feet <span class=\"token operator\">+</span> dist2<span class=\"token punctuation\">.</span>feet<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// adding inches</span>\n    sum<span class=\"token punctuation\">.</span>inch <span class=\"token operator\">=</span> dist1<span class=\"token punctuation\">.</span>inch <span class=\"token operator\">+</span> dist2<span class=\"token punctuation\">.</span>inch<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// changing to feet if inch is greater than 12</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">.</span>inch <span class=\"token operator\">>=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">++</span>sum<span class=\"token punctuation\">.</span>feet<span class=\"token punctuation\">;</span>\n        sum<span class=\"token punctuation\">.</span>inch <span class=\"token operator\">=</span> sum<span class=\"token punctuation\">.</span>inch <span class=\"token operator\">-</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sum of distances = %d\\'-%.1f\\\"\"</span><span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">.</span>feet<span class=\"token punctuation\">,</span> sum<span class=\"token punctuation\">.</span>inch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Structure and Unions","date":null,"description":null}}},"pageContext":{"slug":"/c-programming/unions-and-struct/","previous":{"fields":{"slug":"/others/awareness-guide/"},"frontmatter":{"title":"Spirituality"}},"next":{"fields":{"slug":"/c-programming/strings-and-character-array/"},"frontmatter":{"title":"Strings and Character array"}}}},"staticQueryHashes":["1205699325","1246554614","2841359383","3336116537"]}