{"componentChunkName":"component---src-templates-blog-post-js","path":"/c-programming/errors/","result":{"data":{"site":{"siteMetadata":{"title":"Yajana Rao"}},"markdownRemark":{"id":"45436d21-9e99-5d4a-800e-be9d00e9c28b","excerpt":"Core Dump (Segmentation fault) in C Core Dump/Segmentation fault is a specific kind of error caused by accessing memory that “does not belong to you.” When a…","html":"<h2>Core Dump (Segmentation fault) in C</h2>\n<p>Core Dump/Segmentation fault is a specific kind of error caused by accessing memory that “does not belong to you.”</p>\n<ul>\n<li>When a piece of code tries to do read and write operation in a read only location in memory or freed block of memory, it is known as core dump.</li>\n<li>It is an error indicating memory corruption.</li>\n<li>Modifying a string literal :</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>str<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* Stored in read only part of data segment */</span>\nstr <span class=\"token operator\">=</span> <span class=\"token string\">\"GfG\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* Problem: trying to modify read only memory */</span>\n<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>str<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">'n'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"2\">\n<li>Accessing an address that is freed :</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token comment\">// C program to illustrate</span>\n<span class=\"token comment\">// Core Dump/Segmentation fault</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;alloc.h></span></span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// allocating memory to p</span>\n\t<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> p <span class=\"token operator\">=</span> <span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// deallocated the space allocated to p</span>\n\t<span class=\"token function\">free</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// core dump/segmentation fault</span>\n\t<span class=\"token comment\">// as now this statement is illegal</span>\n\t<span class=\"token operator\">*</span>p <span class=\"token operator\">=</span> <span class=\"token number\">110</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"3\">\n<li>Accessing out of array index bounds</li>\n<li>Improper use of scanf()</li>\n</ol>","frontmatter":{"title":"Errors","date":null,"description":null}}},"pageContext":{"slug":"/c-programming/errors/","previous":{"fields":{"slug":"/c-programming/functions/"},"frontmatter":{"title":"Functions"}},"next":{"fields":{"slug":"/c-programming/conditional-statements/"},"frontmatter":{"title":"Conditional statements"}}}},"staticQueryHashes":["1205699325","1246554614","2841359383","3336116537"]}